[{"/Users/gechang/Desktop/webapp/src/index.js":"1","/Users/gechang/Desktop/webapp/src/App.js":"2","/Users/gechang/Desktop/webapp/src/UserList.js":"3","/Users/gechang/Desktop/webapp/src/Search.js":"4","/Users/gechang/Desktop/webapp/src/InfoList.js":"5","/Users/gechang/Desktop/webapp/src/User.js":"6"},{"size":552,"mtime":1611347650000,"results":"7","hashOfConfig":"8"},{"size":1208,"mtime":1611343770000,"results":"9","hashOfConfig":"8"},{"size":1635,"mtime":1611343754000,"results":"10","hashOfConfig":"8"},{"size":2261,"mtime":1611346700000,"results":"11","hashOfConfig":"8"},{"size":2076,"mtime":1611348426000,"results":"12","hashOfConfig":"8"},{"size":675,"mtime":1611343648000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"c9mu65",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/gechang/Desktop/webapp/src/index.js",[],["29","30"],"/Users/gechang/Desktop/webapp/src/App.js",[],"/Users/gechang/Desktop/webapp/src/UserList.js",["31"],"import React, { useState, useEffect } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserCard from \"./User\";\r\n\r\nfunction UserList() {\r\n  const [images, setImages] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n\r\n  useEffect(() => fetchImages(page), []);\r\n\r\n  function fetchImages(page, take = 30) {\r\n    setPage(page + 1);\r\n    fetch(`https://api.github.com/users?since={page}`)\r\n      .then((resp) => resp.json())\r\n      .then((data) => {\r\n        const newImages = [...images, ...data];\r\n\r\n        setImages(newImages);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"hero is-fullheight is-info is-bold has-text-centered\">\r\n      <div className=\"hero-body\">\r\n        {images.length > 0 && (\r\n          <InfiniteScroll\r\n            next={() => fetchImages(page, 5)}\r\n            hasMore={true}\r\n            dataLength={images.length}\r\n          >\r\n            <div className=\"list-users-content\">\r\n              <div className=\"usershelf-users\">\r\n                \r\n                  <ol className=\"users-grid\" >\r\n                  {images.map((image, index) => (\r\n                    <Link to={`/list?avatar=${image.login}`} key={index}>\r\n                      <UserCard\r\n                        avatar_url={image.avatar_url}\r\n                        login={image.login}\r\n                      />\r\n                    </Link>\r\n                    ))}\r\n                  </ol>\r\n                \r\n              </div>\r\n            </div>\r\n          </InfiniteScroll>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserList;\r\n","/Users/gechang/Desktop/webapp/src/Search.js",[],"/Users/gechang/Desktop/webapp/src/InfoList.js",["32"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\n\r\n\r\nfunction GetRequest() {\r\n  var strs;\r\n  var url = window.location.hash;\r\n  var theRequest = new window.Object();\r\n  if (url.indexOf(\"?\") !== -1) {\r\n    var str = url.split('?')\r\n    str = str[1].substr(0);\r\n    strs = str.split(\"&\");\r\n    for (var i = 0; i < strs.length; i++) {\r\n      theRequest[strs[i].split(\"=\")[0]] = unescape(strs[i].split(\"=\")[1]);\r\n    }\r\n  }\r\n  return theRequest;\r\n}\r\n\r\nfunction InfoList() {\r\n\r\n  const [repos, setRepos] = useState([]);\r\n\r\n  const [followers, setFollowers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchRepos();\r\n    fetchFollowers();\r\n  }, []);\r\n\r\n  function fetchRepos() {\r\n    var states = GetRequest();\r\n    \r\n    var avatar = states && states.avatar;\r\n    avatar &&\r\n      fetch(`https://api.github.com/users/${avatar}/repos`)\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n          const r = [...repos, ...data];\r\n          setRepos(r);\r\n        });\r\n  }\r\n\r\n  function fetchFollowers() {\r\n    var states = GetRequest();\r\n    var avatar = states && states.avatar;\r\n    avatar &&\r\n      fetch(`https://api.github.com/users/${avatar}/followers`)\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n          const r = [...followers, ...data];\r\n          setFollowers(r);\r\n        });\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-users\">\r\n      <div className=\"search-users-bar\">\r\n        <Link className=\"close-search\" to=\"/\">\r\n          Close\r\n        </Link>\r\n        <div className=\"search-users-info-wrapper\">info list</div>\r\n      </div>\r\n      <div className=\"search-users-results\">\r\n        <h4>repositories</h4>\r\n        {repos.map((repo, index) => (\r\n          <div className=\"repo-list\" key={index}>{repo.full_name}</div>\r\n        ))}\r\n        <h4>followers</h4>\r\n        {followers.map((follower, index) => (\r\n          <div className=\"repo-list\" key={index}>{follower.login}</div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoList;\r\n","/Users/gechang/Desktop/webapp/src/User.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":10,"column":38,"nodeType":"39","endLine":10,"endColumn":40,"suggestions":"40"},{"ruleId":"37","severity":1,"message":"41","line":31,"column":6,"nodeType":"39","endLine":31,"endColumn":8,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchImages' and 'page'. Either include them or remove the dependency array.","ArrayExpression",["45"],"React Hook useEffect has missing dependencies: 'fetchFollowers' and 'fetchRepos'. Either include them or remove the dependency array.",["46"],"no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},{"desc":"49","fix":"50"},"Update the dependencies array to be: [fetchImages, page]",{"range":"51","text":"52"},"Update the dependencies array to be: [fetchFollowers, fetchRepos]",{"range":"53","text":"54"},[339,341],"[fetchImages, page]",[708,710],"[fetchFollowers, fetchRepos]"]